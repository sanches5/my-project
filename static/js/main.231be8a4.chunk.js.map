{"version":3,"sources":["Components/SideBar/index.tsx","Pages/Todos/Todos-store.js","Pages/Todos/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["listPages","SideBar","history","useHistory","className","map","page","onClick","push","toLowerCase","todo","todos","id","text","complete","makeAutoObservable","this","filter","t","ind","Todos","observer","useState","textTask","setTextTask","type","value","onChange","e","target","addTodo","completed","length","defaultChecked","completedTodo","removeTodo","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"mRAIMA,EAAY,CACd,YACA,YACA,aACA,MACA,sBACA,SAcWC,MAXf,WACI,IAAMC,EAAUC,cAChB,OACI,qBAAKC,UAAW,WAAhB,SACKJ,EAAUK,KAAI,SAAAC,GACX,OAAO,mBAAcC,QAAS,kBAAML,EAAQM,KAAKF,EAAKG,gBAA/C,SAAgEH,GAAxDA,S,uCCOhBI,EAFJ,I,WAjBP,aAAe,yBAFfC,MAAQ,CAAC,CAACC,GAAI,EAAGC,KAAM,aAAcC,UAAU,IAG3CC,YAAmBC,M,2CAGvB,SAAQN,GACJM,KAAKL,MAAMH,KAAKE,K,wBAGpB,SAAWE,GACPI,KAAKL,MAAQK,KAAKL,MAAMM,QAAO,SAAAC,GAAC,OAAIA,EAAEN,KAAOA,O,2BAGjD,SAAcO,GACVH,KAAKL,MAAMQ,GAAKL,UAAYE,KAAKL,MAAMQ,GAAKL,a,cCcrCM,EA5BDC,aAAS,WAAO,IAAD,EACOC,mBAAiB,IADxB,mBAClBC,EADkB,KACRC,EADQ,KAazB,OAAO,sBAAKpB,UAAW,QAAhB,UACH,uBAAOqB,KAAK,OAAOC,MAAOH,EAAUI,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAOH,UAC1E,wBAAQnB,QAZW,WACnBG,EAAKoB,QACD,CACIC,WAAW,EACXlB,KAAMU,EACNX,GAAIF,EAAKC,MAAMD,EAAKC,MAAMqB,OAAS,GAAGpB,GAAK,IAEnDY,EAAY,KAKZ,yBAGCd,EAAKC,MAAMN,KAAI,SAACa,EAAGC,GAChB,OAAO,gCACH,uBAAOM,KAAK,WAAWQ,eAAgBf,EAAEJ,SAAUa,SAAU,kBAAMjB,EAAKwB,cAAcf,MACtF,4BAAID,EAAEL,OACN,wBAAQN,QAAS,kBAAMG,EAAKyB,WAAWjB,EAAEN,KAAzC,sBAHaM,EAAEN,aCThBwB,MATf,WACE,OACE,sBAAKhC,UAAU,OAAf,UACI,cAAC,EAAD,IACA,cAAC,IAAD,CAAOiC,KAAM,SAAUC,UAAWlB,QCI3BmB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAeC,SAAU,cAAzB,SACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.231be8a4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.scss'\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst listPages = [\r\n    \"Dashboard\",\r\n    \"Customers\",\r\n    \"Remittance\",\r\n    \"P2P\",\r\n    \"Transaction-history\",\r\n    \"Todos\",\r\n]\r\n\r\nfunction SideBar() {\r\n    const history = useHistory()\r\n    return (\r\n        <div className={\"side-bar\"}>\r\n            {listPages.map(page => {\r\n                return <p key={page} onClick={() => history.push(page.toLowerCase())}>{page}</p>\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SideBar;\r\n","import {makeAutoObservable} from \"mobx\";\r\n\r\n\r\n class Todo {\r\n    todos = [{id: 1, text: \"new task!!\", complete: false}]\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    addTodo(todo) {\r\n        this.todos.push(todo)\r\n    }\r\n\r\n    removeTodo(id) {\r\n        this.todos = this.todos.filter(t => t.id !== id )\r\n    }\r\n\r\n    completedTodo(ind) {\r\n        this.todos[ind].complete = !this.todos[ind].complete;\r\n    }\r\n}\r\n\r\nlet todo = new Todo()\r\n\r\nexport default todo","import React, {useState} from 'react';\r\nimport './style.scss'\r\nimport todo from \"./Todos-store\";\r\nimport {observer} from \"mobx-react-lite\";\r\n\r\nconst Todos = observer(() => {\r\n    const [textTask, setTextTask] = useState<string>(\"\");\r\n\r\n    const handleSaveTask = (): void => {\r\n        todo.addTodo(\r\n            {\r\n                completed: false,\r\n                text: textTask,\r\n                id: todo.todos[todo.todos.length - 1].id + 1\r\n            });\r\n        setTextTask(\"\")\r\n    }\r\n\r\n    return <div className={\"todos\"}>\r\n        <input type=\"text\" value={textTask} onChange={(e) => setTextTask(e.target.value)}/>\r\n        <button onClick={handleSaveTask}\r\n        >create task\r\n        </button>\r\n        {todo.todos.map((t, ind) => {\r\n            return <div key={t.id}>\r\n                <input type=\"checkbox\" defaultChecked={t.complete} onChange={() => todo.completedTodo(ind)}/>\r\n                <p>{t.text}</p>\r\n                <button onClick={() => todo.removeTodo(t.id)}>delete</button>\r\n            </div>\r\n        })}\r\n    </div>\r\n})\r\n\r\nexport default Todos;\r\n","import React from 'react';\nimport './App.scss';\nimport {Route} from \"react-router-dom\";\nimport SideBar from \"./Components/SideBar\";\nimport Todos from \"./Pages/Todos\";\n\nfunction App() {\n  return (\n    <div className=\"main\">\n        <SideBar/>\n        <Route path={\"/todos\"} component={Todos}/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n      <BrowserRouter basename={\"/my-project\"}>\n          <App />\n      </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}